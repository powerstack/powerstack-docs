<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="Powerstack">
  <file path="app/includes/utils.php" hash="afa07953baddc08b64ccd18f73726135" package="Powerstack\App">
    <docblock line="19">
      <description>Application
Application class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="App"/>
    </docblock>
    <function namespace="global" line="38" package="Powerstack\App">
      <name>config</name>
      <full_name>\config</full_name>
      <docblock line="29">
        <description>Config
Gets a config information from the global $config variable</description>
        <long-description/>
        <tag line="29" name="see" description="\Powerstack\Core\Config" refers="\Powerstack\Core\Config"/>
        <tag line="29" name="param" description="Name of config variable to get or set." type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="29" name="param" description="Value to set config variable to. (optional, only use to set a config variable)" type="mixed" variable="$value">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="29" name="return" description="Config variable value" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="38">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="38">
        <name>$value</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="59" package="Powerstack\App">
      <name>template</name>
      <full_name>\template</full_name>
      <docblock line="49">
        <description>Template
Render and display a template</description>
        <long-description/>
        <tag line="49" name="see" description="\Powerstack\Core\TemplateFactory" refers="\Powerstack\Core\TemplateFactory"/>
        <tag line="49" name="param" description="Template to render" type="string" variable="$tpl">
          <type by_reference="false">string</type>
        </tag>
        <tag line="49" name="param" description="Array of key =&gt; value template replacements. (optional)" type="array" variable="$params">
          <type by_reference="false">array</type>
        </tag>
        <tag line="49" name="param" description="Name of layout to use. (optional, the default is the default layout)" type="string" variable="$layout">
          <type by_reference="false">string</type>
        </tag>
        <tag line="49" name="return" description="" type="void">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="59">
        <name>$tpl</name>
        <default/>
        <type/>
      </argument>
      <argument line="59">
        <name>$params</name>
        <default>array()</default>
        <type/>
      </argument>
      <argument line="59">
        <name>$layout</name>
        <default>'default'</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="74" package="Powerstack\App">
      <name>session</name>
      <full_name>\session</full_name>
      <docblock line="65">
        <description>Session
Get or set a session</description>
        <long-description/>
        <tag line="65" name="see" description="\Powerstack\Core\SessionFactory" refers="\Powerstack\Core\SessionFactory"/>
        <tag line="65" name="param" description="Name of session to get or set." type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="65" name="param" description="Value to set session to. (optional, only use if setting a session)" type="mixed" variable="$value">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="65" name="return" description="true if setting a session, if getting a session it will return the value or false if no session exists" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="74">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="74">
        <name>$value</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="98" package="Powerstack\App">
      <name>cookie</name>
      <full_name>\cookie</full_name>
      <docblock line="84">
        <description>Cookie
Get or set a cookie</description>
        <long-description/>
        <tag line="84" name="see" description="\Powerstack\Core\Cookie" refers="\Powerstack\Core\Cookie"/>
        <tag line="84" name="param" description="Name of cookie to get or set." type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="84" name="param" description="Value to set cookie to. (optional, only use if setting a cookie)" type="string" variable="$value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="84" name="param" description="Length of time a cookie is valid for in seconds. (optional, default is 3600)" type="int" variable="$expires">
          <type by_reference="false">int</type>
        </tag>
        <tag line="84" name="param" description="The path on the server in which the cookie will be available on. (optional, default is /)" type="string" variable="$path">
          <type by_reference="false">string</type>
        </tag>
        <tag line="84" name="param" description="The domain that the cookie is available to. (optional, default is '')" type="string" variable="$domain">
          <type by_reference="false">string</type>
        </tag>
        <tag line="84" name="param" description="Indicates that the cookie should only be transmitted over a secure HTTPS connection from the client. (optional, default is false)" type="bool" variable="$secure">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="84" name="param" description="When TRUE the cookie will be made accessible only through the HTTP protocol.(optional, default is false)" type="bool" variable="$httponly">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="84" name="return" description="cookie value if getting cookie or true/false when setting a cookie" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="98">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="98">
        <name>$value</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="98">
        <name>$expires</name>
        <default>3600</default>
        <type/>
      </argument>
      <argument line="98">
        <name>$path</name>
        <default>'/'</default>
        <type/>
      </argument>
      <argument line="98">
        <name>$domain</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="98">
        <name>$secure</name>
        <default>false</default>
        <type/>
      </argument>
      <argument line="98">
        <name>$httponly</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="117" package="Powerstack\App">
      <name>hook</name>
      <full_name>\hook</full_name>
      <docblock line="108">
        <description>Hook
Register a hook.</description>
        <long-description/>
        <tag line="108" name="see" description="\Powerstack\Core\Hooks" refers="\Powerstack\Core\Hooks"/>
        <tag line="108" name="param" description="Name of hook your registering" type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="108" name="param" description="Callback function that is executed when the hook is run" type="callback" variable="$function">
          <type by_reference="false">callback</type>
        </tag>
        <tag line="108" name="return" description="" type="void">
          <type by_reference="false">void</type>
        </tag>
      </docblock>
      <argument line="117">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="117">
        <name>$function</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="131" package="Powerstack\App">
      <name>registry</name>
      <full_name>\registry</full_name>
      <docblock line="122">
        <description>Registry
Get or set item in the registry</description>
        <long-description/>
        <tag line="122" name="see" description="\Powerstack\Core\Registry" refers="\Powerstack\Core\Registry"/>
        <tag line="122" name="param" description="Name of item to get or set" type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="122" name="param" description="Value of item to set. (optional, only use when setting a item)" type="mixed" variable="$value">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="122" name="return" description="value or null if getting item, void on set" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="131">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="131">
        <name>$value</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="147" package="Powerstack\App">
      <name>redirect</name>
      <full_name>\redirect</full_name>
      <docblock line="141">
        <description>Redirect
Redirect user to another page.</description>
        <long-description/>
        <tag line="141" name="param" description="Url to rediret to." type="string" variable="$url">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="147">
        <name>$url</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="app/includes/auth.php" hash="b7dedf2c0f35dc5276064e5957938d3b" package="Default">
    <docblock line="2">
      <description>Authenication helper functions</description>
      <long-description></long-description>
    </docblock>
    <function namespace="global" line="17" package="Default">
      <name>auth</name>
      <full_name>\auth</full_name>
      <docblock line="8">
        <description>Auth
Authenicate a user</description>
        <long-description></long-description>
        <tag line="8" name="see" description="\Powerstack\Plugins\Authenication::auth()" refers="\Powerstack\Plugins\Authenication::auth()"/>
        <tag line="8" name="param" description="Username from form" type="string" variable="$username">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="param" description="Password form form" type="string" variable="$password">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="return" description="true on success, false otherwise" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="17">
        <name>$username</name>
        <default></default>
        <type/>
      </argument>
      <argument line="17">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="35" package="Default">
      <name>authd</name>
      <full_name>\authd</full_name>
      <docblock line="28">
        <description>Authd
Check if user is authenicated</description>
        <long-description></long-description>
        <tag line="28" name="see" description="\Powerstack\Plugins\Authenicated::authd()" refers="\Powerstack\Plugins\Authenicated::authd()"/>
        <tag line="28" name="return" description="if authenicated, false otherwise" type="true">
          <type by_reference="false">true</type>
        </tag>
      </docblock>
    </function>
    <function namespace="global" line="54" package="Default">
      <name>hasRole</name>
      <full_name>\hasRole</full_name>
      <docblock line="46">
        <description>hasRole
Check if user has a role assigned</description>
        <long-description></long-description>
        <tag line="46" name="see" description="\Powerstack\Plugins\Authenicated::hasRole()" refers="\Powerstack\Plugins\Authenicated::hasRole()"/>
        <tag line="46" name="param" description="Role to check" type="string" variable="$role">
          <type by_reference="false">string</type>
        </tag>
        <tag line="46" name="return" description="true if user has role, false otherwise" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="54">
        <name>$role</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="73" package="Default">
      <name>hashPassword</name>
      <full_name>\hashPassword</full_name>
      <docblock line="65">
        <description>Hash Password
Hash a password</description>
        <long-description></long-description>
        <tag line="65" name="see" description="\Powerstack\Plugins\Authenicated::hashPassword()" refers="\Powerstack\Plugins\Authenicated::hashPassword()"/>
        <tag line="65" name="param" description="Password to hash" type="string" variable="$password">
          <type by_reference="false">string</type>
        </tag>
        <tag line="65" name="return" description="hashed password" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="73">
        <name>$password</name>
        <default></default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="app/app.php" hash="0fe763dde79f7fe1fcae565ba8c8052e" package="Default">
    <docblock line="2">
      <description>Main application file</description>
      <long-description></long-description>
    </docblock>
  </file>
  <file path="lib/powerstack/core/application.php" hash="f602ee3e92794117a07ee385de7c8f83" package="Powerstack\Core">
    <docblock line="19">
      <description>Application
Application class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>Application</name>
      <full_name>\Powerstack\Core\Application</full_name>
      <property final="false" static="false" visibility="public" line="36" namespace="Powerstack\Core" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="30">
          <description>Powerstack\Core\Config object</description>
          <long-description></long-description>
          <tag line="30" name="acess" description="public"/>
          <tag line="30" name="var" description="" type="\Powerstack\Core\Powerstack\Core\Config">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\Config</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="Powerstack\Core" package="Default">
        <name>$request</name>
        <default></default>
        <docblock line="38">
          <description>Powerstack\Core\Request object</description>
          <long-description></long-description>
          <tag line="38" name="access" description="public"/>
          <tag line="38" name="var" description="" type="\Powerstack\Core\Powerstack\Core\Request">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\Request</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="Powerstack\Core" package="Default">
        <name>$params</name>
        <default></default>
        <docblock line="46">
          <description>Powerstack\Core\Params object</description>
          <long-description></long-description>
          <tag line="46" name="access" description="public"/>
          <tag line="46" name="var" description="" type="\Powerstack\Core\Powerstack\Core\Params">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\Params</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" namespace="Powerstack\Core" package="Default">
        <name>$routes</name>
        <default>array('get' =&gt; array(), 'post' =&gt; array(), 'put' =&gt; array(), 'delete' =&gt; array())</default>
        <docblock line="54">
          <description>Array that holds all the route info</description>
          <long-description></long-description>
          <tag line="54" name="access" description="private"/>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="74" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="67">
          <description>__construct
Create a new instance of Powerstack\Core\Application</description>
          <long-description></long-description>
          <tag line="67" name="access" description="public"/>
          <tag line="67" name="param" description="Powerstack config object" type="\Powerstack\Core\Powerstack\Core\Config" variable="$config">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\Config</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$config</name>
          <default></default>
          <type>\Powerstack\Core\Powerstack\Core\Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="91" package="Default">
        <name>any</name>
        <full_name>any</full_name>
        <docblock line="80">
          <description>Any
Create a route handler that handles more than one HTTP request type</description>
          <long-description></long-description>
          <tag line="80" name="access" description="public"/>
          <tag line="80" name="param" description="An array of HTTP request methods. (Methods are get, post, put, delete)" type="array" variable="$methods">
            <type by_reference="false">array</type>
          </tag>
          <tag line="80" name="param" description="The route. ('/' for index page)" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="param" description="The function that is executed when this route is used." type="callback" variable="$function">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="80" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
          <tag line="80" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$methods</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="125" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="115">
          <description>Get
Create a route handler for HTTP GET request</description>
          <long-description></long-description>
          <tag line="115" name="access" description="public"/>
          <tag line="115" name="param" description="The route. ('/' for index page)" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="param" description="The function that is executed when this route is used." type="callback" variable="$function">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="115" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
          <tag line="115" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="147" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="137">
          <description>Post
Create a route handler for HTTP POST request</description>
          <long-description></long-description>
          <tag line="137" name="access" description="public"/>
          <tag line="137" name="param" description="The route. ('/' for index page)" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="param" description="The function that is executed when this route is used." type="callback" variable="$function">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="137" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
          <tag line="137" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="169" package="Default">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="159">
          <description>Put
Create a route handler for HTTP PUT request</description>
          <long-description></long-description>
          <tag line="159" name="access" description="public"/>
          <tag line="159" name="param" description="The route. ('/' for index page)" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="The function that is executed when this route is used." type="callback" variable="$function">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="159" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
          <tag line="159" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="169">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="191" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="181">
          <description>Delete
Create a route handler for HTTP Delete request</description>
          <long-description></long-description>
          <tag line="181" name="access" description="public"/>
          <tag line="181" name="param" description="The route. ('/' for index page)" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="The function that is executed when this route is used." type="callback" variable="$function">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="181" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
          <tag line="181" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="211" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="203">
          <description>Run
This is the main function that runs the routes.</description>
          <long-description></long-description>
          <tag line="203" name="access" description="public"/>
          <tag line="203" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
          <tag line="203" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Application</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/filesystem.php" hash="262d46c7f22ba4216980f46c6bb94a1d" package="Powerstack\Core">
    <docblock line="19">
      <description>Filesystem
Filesystem class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>Filesystem</name>
      <full_name>\Powerstack\Core\Filesystem</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="40" package="Default">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="31">
          <description>Move
Move a file</description>
          <long-description></long-description>
          <tag line="31" name="access" description="public"/>
          <tag line="31" name="param" description="File to move" type="string" variable="$orig">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="New file path" type="string" variable="$new">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="true on success, otherwise false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$orig</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$new</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="57" package="Default">
        <name>copy</name>
        <full_name>copy</full_name>
        <docblock line="48">
          <description>Copy
Copy a file</description>
          <long-description></long-description>
          <tag line="48" name="access" description="public"/>
          <tag line="48" name="param" description="File to copy" type="string" variable="$orig">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="Where to copy file to" type="string" variable="$new">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="true on success, otherwise false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$orig</name>
          <default></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$new</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="71" package="Default">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="61">
          <description>Remove
Remove a file of directory</description>
          <long-description></long-description>
          <tag line="61" name="access" description="public"/>
          <tag line="61" name="param" description="Path to file/dir to remove" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="Removing directory. (optional default is false)" type="bool" variable="$dir">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="61" name="param" description="Recursivly remove files and directories. (optional default is false)" type="bool" variable="$recursive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="61" name="return" description="true on success, otherwise false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$dir</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="71">
          <name>$recursive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="105" package="Default">
        <name>readFile</name>
        <full_name>readFile</full_name>
        <docblock line="97">
          <description>Read File
Read a File</description>
          <long-description></long-description>
          <tag line="97" name="access" description="public"/>
          <tag line="97" name="param" description="File to read" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="return" description="contents of file on success, otherwise false" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="143" package="Default">
        <name>writeFile</name>
        <full_name>writeFile</full_name>
        <docblock line="134">
          <description>Write File
Write to a file</description>
          <long-description></long-description>
          <tag line="134" name="access" description="public"/>
          <tag line="134" name="param" description="File to write to" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="param" description="Data to write to file" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="true on success, otherwise false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="143">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="175" package="Default">
        <name>appendFile</name>
        <full_name>appendFile</full_name>
        <docblock line="166">
          <description>Append File
Append a file</description>
          <long-description></long-description>
          <tag line="166" name="access" description="public"/>
          <tag line="166" name="param" description="File to append to" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="param" description="Data to append" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="return" description="true on success, otherwise false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="175">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="207" package="Default">
        <name>listAll</name>
        <full_name>listAll</full_name>
        <docblock line="198">
          <description>List All
List All files and directories</description>
          <long-description></long-description>
          <tag line="198" name="access" description="public"/>
          <tag line="198" name="param" description="Directory to list all the things in" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="param" description="Recursivly scan. (optional default is false)" type="bool" variable="$recursive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="198" name="return" description="containing the files and directories found" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$dir</name>
          <default></default>
          <type/>
        </argument>
        <argument line="207">
          <name>$recursive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="226" package="Default">
        <name>listDirs</name>
        <full_name>listDirs</full_name>
        <docblock line="216">
          <description>List Dirs
List Directories</description>
          <long-description></long-description>
          <tag line="216" name="access" description="public"/>
          <tag line="216" name="param" description="Directory to scan" type="\Powerstack\Core\sting" variable="$dir">
            <type by_reference="false">\Powerstack\Core\sting</type>
          </tag>
          <tag line="216" name="param" description="Recursivly scan. (optional default is false)" type="bool" variable="$recursive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="216" name="param" description="Array of found directories. (optional default is empty array)" type="array" variable="$dirs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="return" description="of found directories" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$dir</name>
          <default></default>
          <type/>
        </argument>
        <argument line="226">
          <name>$recursive</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="226">
          <name>$dirs</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="253" package="Default">
        <name>listFiles</name>
        <full_name>listFiles</full_name>
        <docblock line="243">
          <description>List Files
List Files</description>
          <long-description></long-description>
          <tag line="243" name="access" description="public"/>
          <tag line="243" name="param" description="Directory to scan" type="\Powerstack\Core\sting" variable="$dir">
            <type by_reference="false">\Powerstack\Core\sting</type>
          </tag>
          <tag line="243" name="param" description="Recursivly scan. (optional default is false)" type="bool" variable="$recursive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="243" name="param" description="Array of found files. (optional default is empty array)" type="array" variable="$files">
            <type by_reference="false">array</type>
          </tag>
          <tag line="243" name="return" description="of found files" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$dir</name>
          <default></default>
          <type/>
        </argument>
        <argument line="253">
          <name>$recursive</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="253">
          <name>$files</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="279" package="Default">
        <name>mkdir</name>
        <full_name>mkdir</full_name>
        <docblock line="268">
          <description>Mkdir
Make a directory</description>
          <long-description></long-description>
          <tag line="268" name="see" description="\Powerstack\Core\http://php.net/mkdir" refers="\Powerstack\Core\http://php.net/mkdir"/>
          <tag line="268" name="access" description="public"/>
          <tag line="268" name="param" description="Path to new dir" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="268" name="param" description="Mode/chmod permissions for new file. (optional default is 0755)" type="int" variable="$chmod">
            <type by_reference="false">int</type>
          </tag>
          <tag line="268" name="param" description="MAke directories recursivly" type="bool" variable="$recursive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="268" name="return" description="true on sucess, otherwise false" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$dir</name>
          <default></default>
          <type/>
        </argument>
        <argument line="279">
          <name>$chmod</name>
          <default>493</default>
          <type/>
        </argument>
        <argument line="279">
          <name>$recursive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="293" package="Default">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="283">
          <description>Find
Find a file or pattern</description>
          <long-description></long-description>
          <tag line="283" name="see" description="\Powerstack\Core\http://php.net/glob" refers="\Powerstack\Core\http://php.net/glob"/>
          <tag line="283" name="access" description="public"/>
          <tag line="283" name="param" description="Path to search in" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="param" description="Glob pattern" type="string" variable="$pattern">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="return" description="for found items" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$pattern</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Filesystem</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/templatefactory.php" hash="b3eeea945cd35e64748ea97e9e82a497" package="Powerstack\Core">
    <docblock line="19">
      <description>Template Factory
Template Factory class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>TemplateFactory</name>
      <full_name>\Powerstack\Core\TemplateFactory</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Core" package="Default">
        <name>$template</name>
        <default></default>
        <docblock line="30">
          <description>Template object</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="class" type="\Powerstack\Core\Template">
            <type by_reference="false">\Powerstack\Core\Template</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="48" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>__construct
Create a new Powerstack\Core\TemplateFactory object</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      template:
          engine: [template engine]&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="72" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="65">
          <description>Init
Initalize the template class</description>
          <long-description></long-description>
          <tag line="65" name="access" description="public"/>
          <tag line="65" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="86" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="76">
          <description>Render
Render a template</description>
          <long-description></long-description>
          <tag line="76" name="access" description="public"/>
          <tag line="76" name="param" description="Template to render" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="A key =&gt; value array of template replacement vars. (optional, default empty array)" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="param" description="Layout to use. (optional, default is default layout)" type="string" variable="$layout">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="86">
          <name>$layout</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\TemplateFactory</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/exception.php" hash="a7081fff26cfd0433a0102e70c792ea5" package="Powerstack\Core">
    <docblock line="19">
      <description>Exception
Exception class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\Powerstack\Core\Exception</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="38" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Create new exception</description>
          <long-description></long-description>
          <tag line="30" name="access" description="public"/>
          <tag line="30" name="param" description="Exception message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="Exception code" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="param" description="Previous exception" type="\Powerstack\Core\Exception" variable="$previous">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="38">
          <name>$previous</name>
          <default>null</default>
          <type>\Powerstack\Core\Exception</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Exception</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/cookie.php" hash="9d0f2ce59ebcd8f58a8aeca5bb833366" package="Powerstack\Core">
    <docblock line="19">
      <description>Cookie
Cookie class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>Cookie</name>
      <full_name>\Powerstack\Core\Cookie</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Core" package="Default">
        <name>$cookie_name</name>
        <default></default>
        <docblock line="30">
          <description>Cookie Name</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="Powerstack\Core" package="Default">
        <name>$expire</name>
        <default></default>
        <docblock line="38">
          <description>Cookie Expiry</description>
          <long-description></long-description>
          <tag line="38" name="access" description="private"/>
          <tag line="38" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Powerstack\Core" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="46">
          <description>Cookie Path</description>
          <long-description></long-description>
          <tag line="46" name="access" description="private"/>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" namespace="Powerstack\Core" package="Default">
        <name>$domain</name>
        <default></default>
        <docblock line="54">
          <description>Cookie Domain</description>
          <long-description></long-description>
          <tag line="54" name="access" description="private"/>
          <tag line="54" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="68" namespace="Powerstack\Core" package="Default">
        <name>$secure</name>
        <default></default>
        <docblock line="62">
          <description>Cookie Secure</description>
          <long-description></long-description>
          <tag line="62" name="access" description="private"/>
          <tag line="62" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="76" namespace="Powerstack\Core" package="Default">
        <name>$httponly</name>
        <default></default>
        <docblock line="70">
          <description>Cookie HTTP Only</description>
          <long-description></long-description>
          <tag line="70" name="access" description="private"/>
          <tag line="70" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="94" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="78">
          <description>__construct
Create a new Powerstack\Core\Cookie object</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml
      settings:
          cookie:
              cookie_name: name of cookie
              expire: how long cookie is valid for
              path: path cookie is for
              domain: domain cookie is for
              secure: cookie only over https
              httponly: lock cookie down to just http&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="123" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="115">
          <description>Get
Get the value of a cookie</description>
          <long-description></long-description>
          <tag line="115" name="access" description="public"/>
          <tag line="115" name="param" description="Name of cookie to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="null if cookie doesn't exist or the value if it does exist" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="148" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="133">
          <description>Set
Set a cookie</description>
          <long-description></long-description>
          <tag line="133" name="access" description="public"/>
          <tag line="133" name="link" description="http://php.net/set_cookie" link="http://php.net/set_cookie"/>
          <tag line="133" name="param" description="Name of cookie" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="param" description="Value of cookie" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="param" description="The time the cookie expires. (optional, default is an hour from creation)" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="133" name="param" description="The path on the server in which the cookie will be available on.  (optional, default is /)" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="param" description="The domain that the cookie is available to. (optional, default is '')" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="param" description="Indicates that the cookie should only be transmitted over a secure HTTPS connection from the client. (optional, default is false)" type="bool" variable="$secure">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="133" name="param" description="When TRUE the cookie will be made accessible only through the HTTP protocol. (optional, default is false)" type="bool" variable="$httponly">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="133" name="return" description="true or false based on success" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$expire</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="148">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="148">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="148">
          <name>$secure</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="148">
          <name>$httponly</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Cookie</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/sessionsimple.php" hash="a6b165e60c309d405090b3673ffa551f" package="Powerstack\Core">
    <docblock line="19">
      <description>Session Simple
Simple Session class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>SessionSimple</name>
      <full_name>\Powerstack\Core\SessionSimple</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="43" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="30">
          <description>Init
Initalize the session storage</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      session:
          engine: simple
          [savepath:[path to directory to store session]]&lt;/p&gt;</long-description>
          <tag line="30" name="access" description="public"/>
          <tag line="30" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="63" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="54">
          <description>Set
Set a session</description>
          <long-description/>
          <tag line="54" name="access" description="public"/>
          <tag line="54" name="param" description="Name of session" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="Value of session" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="54" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="78" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="70">
          <description>Get
Get a session</description>
          <long-description/>
          <tag line="70" name="access" description="public"/>
          <tag line="70" name="param" description="Name of session to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="session value or false" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="93" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="85">
          <description>Delete
Delete a session</description>
          <long-description/>
          <tag line="85" name="access" description="public"/>
          <tag line="85" name="param" description="Name of session to delete" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\SessionSimple</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/config.php" hash="95a611db5e2224cbd43b425a4c9bfeec" package="Powerstack\Core">
    <docblock line="19">
      <description>Config
Config class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>Config</name>
      <full_name>\Powerstack\Core\Config</full_name>
      <property final="false" static="false" visibility="protected" line="36" namespace="Powerstack\Core" package="Default">
        <name>$config</name>
        <default/>
        <docblock line="30">
          <description>Config object</description>
          <long-description/>
          <tag line="30" name="access" description="protected"/>
          <tag line="30" name="var" description="" type="\Powerstack\Core\stdclass">
            <type by_reference="false">\Powerstack\Core\stdclass</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="46" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>__construct
Create a new Powerstack\Core\Config object</description>
          <long-description/>
          <tag line="38" name="access" description="public"/>
          <tag line="38" name="param" description="Path to config yaml file" type="string" variable="$conf_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$conf_file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="65" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="58">
          <description>__get
Get a class variable</description>
          <long-description/>
          <tag line="58" name="param" description="Name of class var to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="null if class var doesn't exist or the value of class var if it does exist" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="81" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="73">
          <description>__set
Set a class variable</description>
          <long-description/>
          <tag line="73" name="param" description="Name of class var to set" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="Value to set class var to" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="73" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="81">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Powerstack\Core" line="94" package="Default">
        <name>load_config</name>
        <full_name>load_config</full_name>
        <docblock line="85">
          <description>Load Config
Load the config file into class variables</description>
          <long-description/>
          <tag line="85" name="access" description="protected"/>
          <tag line="85" name="param" description="Path to config file" type="string" variable="$conf_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="throws" description="" type="\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Core\Exception</type>
          </tag>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$conf_file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Powerstack\Core" line="180" package="Default">
        <name>arrayToObj</name>
        <full_name>arrayToObj</full_name>
        <docblock line="172">
          <description>Array To Obj
Convert an array to a object</description>
          <long-description/>
          <tag line="172" name="access" description="protected"/>
          <tag line="172" name="param" description="Array to convert to object" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="172" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$array</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Config</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/hooks.php" hash="3f774d98245039cb866916a00dc9c227" package="Powerstack\Core">
    <docblock line="19">
      <description>Hooks
Hooks class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>Hooks</name>
      <full_name>\Powerstack\Core\Hooks</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Core" package="Default">
        <name>$hooks</name>
        <default></default>
        <docblock line="30">
          <description>Array that stores hooks</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="47" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="38">
          <description>Register
Register a hook to be executed</description>
          <long-description></long-description>
          <tag line="38" name="acess" description="public"/>
          <tag line="38" name="param" description="Name of hook to register" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="Function to be executed when hook is run" type="callback" variable="$function">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="38" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="64" package="Default">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="56">
          <description>Exists
Check if a hook exists</description>
          <long-description></long-description>
          <tag line="56" name="access" description="public"/>
          <tag line="56" name="param" description="Name of hook to check" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="return" description="true if exists, false if it doesn't exist" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="80" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="72">
          <description>Get
Get all the functions that have been registered for a hook</description>
          <long-description></long-description>
          <tag line="72" name="access" description="public"/>
          <tag line="72" name="param" description="Name of hook to get functions for" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="return" description="empty array if no functions found, array of function if there are functions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Hooks</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/params.php" hash="584c9a531456d65a0c66f4a9d93a8260" package="Powerstack\Core">
    <docblock line="19">
      <description>Params
Params class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="30" package="Default">
      <extends/>
      <name>Params</name>
      <full_name>\Powerstack\Core\Params</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="35" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>__construct
Create a new Powerstack\Core\Params object</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="46" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="39">
          <description>__get
Get a class var value</description>
          <long-description/>
          <tag line="39" name="param" description="Name of class var to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="return" description="class var value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="63" package="Default">
        <name>parse_uri</name>
        <full_name>parse_uri</full_name>
        <docblock line="54">
          <description>Parse Uri
Parse a requested uri for any placeholder values and add them to the class vars</description>
          <long-description/>
          <tag line="54" name="access" description="public"/>
          <tag line="54" name="param" description="The route uri" type="string" variable="$routeuri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="The request uri" type="string" variable="$requesturi">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$routeuri</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$requesturi</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Powerstack\Core" line="82" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="75">
          <description>Init
Initalize the object and load anything for $_GET &amp; $_POST into the class vars</description>
          <long-description/>
          <tag line="75" name="access" description="protected"/>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="30" code="50000">No DocBlock was found for \Powerstack\Core\Params</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/exceptionhandler.php" hash="e22bc6a6aaddd5cb9f518e3c6f84d20a" package="Powerstack\Core">
    <docblock line="19">
      <description>Exception Handler
Exception Handler class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>ExceptionHandler</name>
      <full_name>\Powerstack\Core\ExceptionHandler</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="38" package="Default">
        <name>handler</name>
        <full_name>handler</full_name>
        <docblock line="30">
          <description>Handler
Handle errors</description>
          <long-description/>
          <tag line="30" name="access" description="public"/>
          <tag line="30" name="param" description="Exception object" type="\Powerstack\Core\exception" variable="$exception">
            <type by_reference="false">\Powerstack\Core\exception</type>
          </tag>
          <tag line="30" name="return" description="void if not needed or true" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$exception</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="66" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="58">
          <description>Log
Log an error</description>
          <long-description/>
          <tag line="58" name="access" description="public"/>
          <tag line="58" name="param" description="Error to log" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\ExceptionHandler</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/templatesimple.php" hash="585bf1136eda35677e68729b2c8ec5b2" package="Powerstack\Core">
    <docblock line="19">
      <description>Template Simple
Simple Template class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>TemplateSimple</name>
      <full_name>\Powerstack\Core\TemplateSimple</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Core" package="Default">
        <name>$viewsdir</name>
        <default/>
        <docblock line="30">
          <description>Voess Directory</description>
          <long-description/>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="Powerstack\Core" package="Default">
        <name>$conf</name>
        <default/>
        <docblock line="38">
          <description>Config object</description>
          <long-description/>
          <tag line="38" name="access" description="private"/>
          <tag line="38" name="var" description="" type="\Powerstack\Core\stdclass">
            <type by_reference="false">\Powerstack\Core\stdclass</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="57" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="46">
          <description>Init
Initialize template engine</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      template:
          engine: simple&lt;/p&gt;</long-description>
          <tag line="46" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="76" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="63">
          <description>Render
Render a template</description>
          <long-description>&lt;p&gt;Hook before_template_render, function takes the $params as an argument for
changing values on the fly, function must return the $params array.&lt;/p&gt;</long-description>
          <tag line="63" name="access" description="public"/>
          <tag line="63" name="param" description="Template to render" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="A key =&gt; value array of template replacement vars. (optional, default empty array)" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="63" name="param" description="Layout to use. (optional, default is default layout)" type="string" variable="$layout">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$layout</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\TemplateSimple</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/registry.php" hash="4ff1d10a9caca4eb2a0d150e3092854d" package="Powerstack\Core">
    <docblock line="19">
      <description>Registry
Registry class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>Registry</name>
      <full_name>\Powerstack\Core\Registry</full_name>
      <property final="false" static="false" visibility="protected" line="36" namespace="Powerstack\Core" package="Default">
        <name>$store</name>
        <default>array()</default>
        <docblock line="30">
          <description>Array to store all registry items</description>
          <long-description/>
          <tag line="30" name="access" description="protected"/>
          <tag line="30" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="44" namespace="Powerstack\Core" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="38">
          <description>Singleton Instance</description>
          <long-description/>
          <tag line="38" name="access" description="protected"/>
          <tag line="38" name="var" description="Object" type="\Powerstack\Core\Powerstack\Core\Registry">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\Registry</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Powerstack\Core" line="52" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="46">
          <description>Get Instance
Get instance of Powerstack\Core\Registry</description>
          <long-description/>
          <tag line="46" name="return" description="" type="\Powerstack\Core\Powerstack\Core\Registry">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\Registry</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="67" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="60">
          <description>Get
Get a value from the registry</description>
          <long-description/>
          <tag line="60" name="param" description="Name of registry item to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="return" description="null if item not found, otherwise value of item" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="83" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="75">
          <description>Set
Set a item in the registry</description>
          <long-description/>
          <tag line="75" name="param" description="Name of item to store" type="\Powerstack\Core\sting" variable="$name">
            <type by_reference="false">\Powerstack\Core\sting</type>
          </tag>
          <tag line="75" name="param" description="Value of item" type="\Powerstack\Core\moxed" variable="$value">
            <type by_reference="false">\Powerstack\Core\moxed</type>
          </tag>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="83">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="95" package="Default">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="87">
          <description>Exists
See if an item exists in the registry</description>
          <long-description/>
          <tag line="87" name="access" description="public"/>
          <tag line="87" name="param" description="Name of item to check" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="true if exists, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="107" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="99">
          <description>Delete
Delete an item for the registry</description>
          <long-description/>
          <tag line="99" name="access" description="public"/>
          <tag line="99" name="param" description="Name of item to remove" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Powerstack\Core" line="121" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="116">
          <description>__construct</description>
          <long-description/>
          <tag line="116" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Powerstack\Core" line="129" package="Default">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="124">
          <description>__clone</description>
          <long-description/>
          <tag line="124" name="access" description="private"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Registry</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/notfoundexception.php" hash="191270fa47fc8915e3544144f4f01014" package="Powerstack\Core">
    <docblock line="19">
      <description>NotFoundException
NotFoundException class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="30" package="Default">
      <extends>\Powerstack\Core\Exception</extends>
      <name>NotFoundException</name>
      <full_name>\Powerstack\Core\NotFoundException</full_name>
    </class>
    <parse_markers>
      <error line="30" code="50000">No DocBlock was found for \Powerstack\Core\NotFoundException</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/request.php" hash="0a775d34f6b08658a5e0cdd33371b6db" package="Powerstack\Core">
    <docblock line="19">
      <description>Request
Request class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>Request</name>
      <full_name>\Powerstack\Core\Request</full_name>
      <property final="false" static="false" visibility="public" line="36" namespace="Powerstack\Core" package="Default">
        <name>$request_method</name>
        <default/>
        <docblock line="30">
          <description>Request Method</description>
          <long-description/>
          <tag line="30" name="access" description="public"/>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="Powerstack\Core" package="Default">
        <name>$request_uri</name>
        <default/>
        <docblock line="38">
          <description>Request URI</description>
          <long-description/>
          <tag line="38" name="access" description="public"/>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="Powerstack\Core" package="Default">
        <name>$https</name>
        <default/>
        <docblock line="46">
          <description>HTTPS</description>
          <long-description/>
          <tag line="46" name="access" description="public"/>
          <tag line="46" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="60" namespace="Powerstack\Core" package="Default">
        <name>$remote_address</name>
        <default/>
        <docblock line="54">
          <description>Remote Address</description>
          <long-description/>
          <tag line="54" name="access" description="public"/>
          <tag line="54" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="Powerstack\Core" package="Default">
        <name>$http_referer</name>
        <default/>
        <docblock line="62">
          <description>HTTP Referer</description>
          <long-description/>
          <tag line="62" name="access" description="public"/>
          <tag line="62" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="76" namespace="Powerstack\Core" package="Default">
        <name>$user_agent</name>
        <default/>
        <docblock line="70">
          <description>User Agent</description>
          <long-description/>
          <tag line="70" name="access" description="public"/>
          <tag line="70" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="84" namespace="Powerstack\Core" package="Default">
        <name>$query_string</name>
        <default/>
        <docblock line="78">
          <description>Query String</description>
          <long-description/>
          <tag line="78" name="access" description="public"/>
          <tag line="78" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="92" namespace="Powerstack\Core" package="Default">
        <name>$base_uri</name>
        <default/>
        <docblock line="86">
          <description>Base Uri</description>
          <long-description/>
          <tag line="86" name="access" description="public"/>
          <tag line="86" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="100" namespace="Powerstack\Core" package="Default">
        <name>$cookie</name>
        <default/>
        <docblock line="94">
          <description>Powerstack\Core\Cookie object</description>
          <long-description/>
          <tag line="94" name="access" description="public"/>
          <tag line="94" name="var" description="" type="\Powerstack\Core\Powerstack\Core\Cookie">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\Cookie</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="108" namespace="Powerstack\Core" package="Default">
        <name>$session</name>
        <default/>
        <docblock line="102">
          <description>Powerstack\Core\Session object</description>
          <long-description/>
          <tag line="102" name="access" description="public"/>
          <tag line="102" name="var" description="" type="\Powerstack\Core\Powerstack\Core\SessionFactory">
            <type by_reference="false">\Powerstack\Core\Powerstack\Core\SessionFactory</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="114" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="110">
          <description>__construct
Create a new Powerstack\Core\Request object</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Powerstack\Core" line="134" package="Default">
        <name>get_requesturi</name>
        <full_name>get_requesturi</full_name>
        <docblock line="127">
          <description>Get Request Uri
Get the requet uri either for $_SERVER['REQUEST_URI'] or $_GET['q']</description>
          <long-description/>
          <tag line="127" name="access" description="protected"/>
          <tag line="127" name="return" description="the request uri" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\Request</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/errorhandler.php" hash="78427f64b0ec4f3b53f49990a9de8571" package="Powerstack\Core">
    <docblock line="19">
      <description>Error Handler
Error Handler class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>ErrorHandler</name>
      <full_name>\Powerstack\Core\ErrorHandler</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="41" package="Default">
        <name>handler</name>
        <full_name>handler</full_name>
        <docblock line="30">
          <description>Handler
Handle errors</description>
          <long-description/>
          <tag line="30" name="access" description="public"/>
          <tag line="30" name="param" description="Error Number" type="int" variable="$errno">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="param" description="Error message" type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="File where error happened" type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="Line in file where error happened" type="int" variable="$errline">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="return" description="void if not needed or true" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$errno</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$errstr</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$errfile</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$errline</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="93" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="85">
          <description>Log
Log an error</description>
          <long-description/>
          <tag line="85" name="access" description="public"/>
          <tag line="85" name="param" description="Error to log" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\ErrorHandler</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/core/sessionfactory.php" hash="6f46a905db3b13b92d4178fde30046eb" package="Powerstack\Core">
    <docblock line="19">
      <description>SessionFactory
SessionFactory class for Powerstack</description>
      <long-description/>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Core"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Core" line="29" package="Default">
      <extends/>
      <name>SessionFactory</name>
      <full_name>\Powerstack\Core\SessionFactory</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Core" package="Default">
        <name>$session</name>
        <default/>
        <docblock line="30">
          <description>Session object</description>
          <long-description/>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="object" type="\Powerstack\Core\Session">
            <type by_reference="false">\Powerstack\Core\Session</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="Powerstack\Core" package="Default">
        <name>$conf</name>
        <default/>
        <docblock line="38">
          <description>Config object</description>
          <long-description/>
          <tag line="38" name="access" description="private"/>
          <tag line="38" name="var" description="" type="\Powerstack\Core\stdclass">
            <type by_reference="false">\Powerstack\Core\stdclass</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="57" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="46">
          <description>__construct
Create a new Powerstack\Core\SessionFactory object</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      session:
          engine:[session engine]&lt;/p&gt;</long-description>
          <tag line="46" name="thorws" description="Exception"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="80" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="73">
          <description>Init
Initalize a session class</description>
          <long-description/>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="93" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="84">
          <description>Set
Set a session</description>
          <long-description/>
          <tag line="84" name="acccess" description="public"/>
          <tag line="84" name="param" description="Name of session" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="param" description="Value of session" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="84" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="93">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="105" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="97">
          <description>Get
Get a session value</description>
          <long-description/>
          <tag line="97" name="access" description="public"/>
          <tag line="97" name="param" description="Name of session to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="return" description="value of session if it exists, false otherwise" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Core" line="117" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="109">
          <description>Delete
Delete a session</description>
          <long-description/>
          <tag line="109" name="access" description="public"/>
          <tag line="109" name="param" description="Name of session to delete" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Core\SessionFactory</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/database.php" hash="bc5f44c44da99d3b45766a1ad0ef259a" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Database
PDO database class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Plugins" line="29" package="Default">
      <extends/>
      <name>Database</name>
      <full_name>\Powerstack\Plugins\Database</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Plugins" package="Default">
        <name>$conf</name>
        <default></default>
        <docblock line="30">
          <description>Configuration info</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="\Powerstack\Plugins\stdclass">
            <type by_reference="false">\Powerstack\Plugins\stdclass</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="Powerstack\Plugins" package="Default">
        <name>$db</name>
        <default></default>
        <docblock line="38">
          <description>PDO Object</description>
          <long-description></long-description>
          <tag line="38" name="access" description="private"/>
          <tag line="38" name="var" description="" type="\Powerstack\Plugins\PDO">
            <type by_reference="false">\Powerstack\Plugins\PDO</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Powerstack\Plugins" package="Default">
        <name>$statement</name>
        <default></default>
        <docblock line="46">
          <description>PDO Statement Object</description>
          <long-description></long-description>
          <tag line="46" name="access" description="private"/>
          <tag line="46" name="var" description="" type="\Powerstack\Plugins\PDOStatment">
            <type by_reference="false">\Powerstack\Plugins\PDOStatment</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" namespace="Powerstack\Plugins" package="Default">
        <name>$connected</name>
        <default>false</default>
        <docblock line="54">
          <description>Is the database connected</description>
          <long-description></long-description>
          <tag line="54" name="access" description="private"/>
          <tag line="54" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="78" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="62">
          <description>__construct
Create a new Powerstack\Plugins\Database object</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      plugins:
          database:
              driver: [pgsql | mysql | sqlite]
              host: [Database Host]
              name: [Database Name]
              user: [Database Username]
              pass: [Database Password]
              port: [Database Port]&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="98" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="88">
          <description>Connect
Connect to the database</description>
          <long-description>&lt;p&gt;Hook database_connected is called after a successful connection is made
to the database. It passes the a reference to the new PDO object.&lt;/p&gt;</long-description>
          <tag line="88" name="access" description="public"/>
          <tag line="88" name="throws" description="" type="\Powerstack\Plugins\PDOException">
            <type by_reference="false">\Powerstack\Plugins\PDOException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="135" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="128">
          <description>Is Connected
Are you connected to the database</description>
          <long-description></long-description>
          <tag line="128" name="access" description="public"/>
          <tag line="128" name="return" description="true if connected, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="149" package="Default">
        <name>executeSql</name>
        <full_name>executeSql</full_name>
        <docblock line="139">
          <description>Execute Sql
Execute a sql command</description>
          <long-description></long-description>
          <tag line="139" name="access" description="public"/>
          <tag line="139" name="param" description="Sql query to execute" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="Array of replacements values for the query. (optional)" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="139" name="throws" description="" type="\Powerstack\Plugins\PDOException">
            <type by_reference="false">\Powerstack\Plugins\PDOException</type>
          </tag>
          <tag line="139" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="149">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="172" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="158">
          <description>Select
Run a select query on the database</description>
          <long-description></long-description>
          <tag line="158" name="access" description="public"/>
          <tag line="158" name="param" description="Name of table to query" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="param" description="Field =&gt; value array to be used as where statements. (optional)" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="158" name="param" description="Field =&gt; value array to be used as like statements. (optional)" type="array" variable="$like">
            <type by_reference="false">array</type>
          </tag>
          <tag line="158" name="param" description="Field =&gt; order array to be used as order by statement. (optional)" type="array" variable="$order">
            <type by_reference="false">array</type>
          </tag>
          <tag line="158" name="param" description="Limit number of records. (optional)" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="158" name="param" description="Offset the reccords. (optional)" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="158" name="throws" description="" type="\Powerstack\Plugins\PDOException">
            <type by_reference="false">\Powerstack\Plugins\PDOException</type>
          </tag>
          <tag line="158" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="172">
          <name>$where</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="172">
          <name>$like</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="172">
          <name>$order</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="172">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="172">
          <name>$offset</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="240" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="230">
          <description>Insert
Insert a record into the database</description>
          <long-description></long-description>
          <tag line="230" name="access" description="public"/>
          <tag line="230" name="param" description="Name of table to insert into" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="Field =&gt; value array for data to be inserted" type="array" variable="$record">
            <type by_reference="false">array</type>
          </tag>
          <tag line="230" name="throws" description="" type="\Powerstack\Plugins\PDOException">
            <type by_reference="false">\Powerstack\Plugins\PDOException</type>
          </tag>
          <tag line="230" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$record</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="272" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="261">
          <description>Update
Update a record into the database</description>
          <long-description></long-description>
          <tag line="261" name="access" description="public"/>
          <tag line="261" name="param" description="Name of table to update" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="Field =&gt; value array for data to be inserted" type="array" variable="$record">
            <type by_reference="false">array</type>
          </tag>
          <tag line="261" name="param" description="Field =&gt; value array to be used as where statements" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="261" name="throws" description="" type="\Powerstack\Plugins\PDOException">
            <type by_reference="false">\Powerstack\Plugins\PDOException</type>
          </tag>
          <tag line="261" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$record</name>
          <default></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="315" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="305">
          <description>Delete
Delete a record from the database</description>
          <long-description></long-description>
          <tag line="305" name="access" description="public"/>
          <tag line="305" name="param" description="Name of table to delete from" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="param" description="Field =&gt; value array to be used as where statements" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="305" name="throws" description="" type="\Powerstack\Plugins\PDOException">
            <type by_reference="false">\Powerstack\Plugins\PDOException</type>
          </tag>
          <tag line="305" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="347" package="Default">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="339">
          <description>Fetch
Fetch a row from the resultset</description>
          <long-description></long-description>
          <tag line="339" name="access" description="public"/>
          <tag line="339" name="param" description="PDO Fetch style. (optional, default is PDO::FETCH_OBJ)" type="int" variable="$fetch">
            <type by_reference="false">int</type>
          </tag>
          <tag line="339" name="returns" description="mixed row from resultset"/>
        </docblock>
        <argument line="347">
          <name>$fetch</name>
          <default>\PDO::FETCH_OBJ</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="359" package="Default">
        <name>fetchAll</name>
        <full_name>fetchAll</full_name>
        <docblock line="351">
          <description>FetchAll
Fetch all rows from the resultset</description>
          <long-description></long-description>
          <tag line="351" name="access" description="public"/>
          <tag line="351" name="param" description="PDO Fetch style. (optional, default is PDO::FETCH_OBJ)" type="int" variable="$fetch">
            <type by_reference="false">int</type>
          </tag>
          <tag line="351" name="returns" description="array rows from resultset"/>
        </docblock>
        <argument line="359">
          <name>$fetch</name>
          <default>\PDO::FETCH_OBJ</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="370" package="Default">
        <name>rowCount</name>
        <full_name>rowCount</full_name>
        <docblock line="363">
          <description>Row Count
Gets number of rows selected or row affected</description>
          <long-description></long-description>
          <tag line="363" name="access" description="public"/>
          <tag line="363" name="return" description="number of rows selected or row affected" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="381" package="Default">
        <name>statementError</name>
        <full_name>statementError</full_name>
        <docblock line="374">
          <description>Statement Error
Get error info about the last statement run</description>
          <long-description></long-description>
          <tag line="374" name="access" description="public"/>
          <tag line="374" name="return" description="with error info" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="395" package="Default">
        <name>databaseError</name>
        <full_name>databaseError</full_name>
        <docblock line="388">
          <description>Database Error
Get error info from database handle</description>
          <long-description></long-description>
          <tag line="388" name="access" description="public"/>
          <tag line="388" name="return" description="with error info" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Powerstack\Plugins" line="409" package="Default">
        <name>buildDsn</name>
        <full_name>buildDsn</full_name>
        <docblock line="402">
          <description>Build Dsn
Builds the PDO Dsn string</description>
          <long-description></long-description>
          <tag line="402" name="access" description="private"/>
          <tag line="402" name="return" description="PDO Dsn" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Plugins\Database</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/captcha/recaptcha.php" hash="b719b71bb8ab449d812c742bfee160c8" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Recaptcha
Recaptcha class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <include line="28" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Powerstack\Plugins\Captcha" line="30" package="Default">
      <extends/>
      <name>Recaptcha</name>
      <full_name>\Powerstack\Plugins\Captcha\Recaptcha</full_name>
      <property final="false" static="false" visibility="private" line="37" namespace="Powerstack\Plugins\Captcha" package="Default">
        <name>$conf</name>
        <default></default>
        <docblock line="31">
          <description>Configuration info</description>
          <long-description></long-description>
          <tag line="31" name="access" description="private"/>
          <tag line="31" name="var" description="" type="\Powerstack\Plugins\Captcha\stdclass">
            <type by_reference="false">\Powerstack\Plugins\Captcha\stdclass</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="45" namespace="Powerstack\Plugins\Captcha" package="Default">
        <name>$error</name>
        <default>null</default>
        <docblock line="39">
          <description>Recaptcha error object</description>
          <long-description></long-description>
          <tag line="39" name="access" description="private"/>
          <tag line="39" name="var" description="" type="\Powerstack\Plugins\Captcha\ReCaptchaResponse">
            <type by_reference="false">\Powerstack\Plugins\Captcha\ReCaptchaResponse</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Captcha" line="59" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description>__construct
Create a new Powerstack\Plugins\Captcha\Recaptcha object</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      plugins:
          recaptcha:
              publickey: [recaptcha public key]
              privatekey: [recaptcha private key]&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Captcha" line="80" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="73">
          <description>Get
Get the captcha html</description>
          <long-description></long-description>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="HTML for recaptcha" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Captcha" line="91" package="Default">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="84">
          <description>Check
Check validates the input to recaptcha</description>
          <long-description></long-description>
          <tag line="84" name="access" description="public"/>
          <tag line="84" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="30" code="50000">No DocBlock was found for \Powerstack\Plugins\Captcha\Recaptcha</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/analytics/piwik.php" hash="69a17c2c95926c80465b7ac46aa50f99" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Piwik
Piwik class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Plugins\Analytics" line="29" package="Default">
      <extends/>
      <name>Piwik</name>
      <full_name>\Powerstack\Plugins\Analytics\Piwik</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Plugins\Analytics" package="Default">
        <name>$conf</name>
        <default></default>
        <docblock line="30">
          <description>Configuration info</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="\Powerstack\Plugins\Analytics\stdclass">
            <type by_reference="false">\Powerstack\Plugins\Analytics\stdclass</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Analytics" line="50" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>__construct
Create a new Powerstack\Plugins\Analytics\Piwik object</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      plugins:
          piwik:
              domain: [piwik domain]
              siteid: [piwik siteid]&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Analytics" line="66" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="59">
          <description>Get
Get the javscript tracking code for you site</description>
          <long-description></long-description>
          <tag line="59" name="access" description="public"/>
          <tag line="59" name="return" description="javascript tracking code for piwik" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Plugins\Analytics\Piwik</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/template/templatetwig.php" hash="48cb9045588e747362b8bf8ba8846a75" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Template Twig
Twig wrapper class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Plugins\Template" line="29" package="Default">
      <extends/>
      <name>TemplateTwig</name>
      <full_name>\Powerstack\Plugins\Template\TemplateTwig</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Plugins\Template" package="Default">
        <name>$twig</name>
        <default></default>
        <docblock line="30">
          <description>Twig Object</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="\Powerstack\Plugins\Template\TwigEnvironment">
            <type by_reference="false">\Powerstack\Plugins\Template\TwigEnvironment</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="Powerstack\Plugins\Template" package="Default">
        <name>$conf</name>
        <default></default>
        <docblock line="38">
          <description>Configuration info</description>
          <long-description></long-description>
          <tag line="38" name="access" description="private"/>
          <tag line="38" name="var" description="" type="\Powerstack\Plugins\Template\stdclass">
            <type by_reference="false">\Powerstack\Plugins\Template\stdclass</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Powerstack\Plugins\Template" package="Default">
        <name>$viewsdir</name>
        <default></default>
        <docblock line="46">
          <description>Views Directory</description>
          <long-description></long-description>
          <tag line="46" name="access" description="private"/>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Template" line="67" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="54">
          <description>Init
Initalize template engine</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      template:
          engine: twig
          [cachedir: [path to cache dir]]&lt;/p&gt;</long-description>
          <tag line="54" name="access" description="public"/>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Template" line="97" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="83">
          <description>Render
Render a template</description>
          <long-description>&lt;p&gt;Hook before_template_render, function takes the $params as an argument for
changing values on the fly, function must return the $params array.&lt;/p&gt;</long-description>
          <tag line="83" name="access" description="public"/>
          <tag line="83" name="param" description="Template file to render" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="param" description="Key =&gt; value array of template replacements. (optional, default is empty array)" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="83" name="param" description="Name of layout to use. (optional, default is default)" type="string" variable="$layout">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="throws" description="" type="\Powerstack\Plugins\Template\TwigException">
            <type by_reference="false">\Powerstack\Plugins\Template\TwigException</type>
          </tag>
          <tag line="83" name="return" description="rendered template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$tpl</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="97">
          <name>$layout</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Plugins\Template\TemplateTwig</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/memcached.php" hash="0a59ed79abc2a8d265666776e6d66d62" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Memcached
Memcached wrapper for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Plugins" line="29" package="Default">
      <extends/>
      <name>Memcached</name>
      <full_name>\Powerstack\Plugins\Memcached</full_name>
      <property final="false" static="false" visibility="private" line="36" namespace="Powerstack\Plugins" package="Default">
        <name>$conf</name>
        <default></default>
        <docblock line="30">
          <description>Configuration info</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="\Powerstack\Plugins\stdclass">
            <type by_reference="false">\Powerstack\Plugins\stdclass</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="Powerstack\Plugins" package="Default">
        <name>$memcached</name>
        <default></default>
        <docblock line="38">
          <description>Memcached object</description>
          <long-description></long-description>
          <tag line="38" name="access" description="private"/>
          <tag line="38" name="var" description="" type="\Powerstack\Plugins\Memcached">
            <type by_reference="false">\Powerstack\Plugins\Memcached</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="57" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="46">
          <description>__construct
Create a new Powerstack\Plugins\Memcached object</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      plugins:
          memcached:
              servers: [Memcached servers (host:port[,host:port])]&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="92" package="Default">
        <name>addServer</name>
        <full_name>addServer</full_name>
        <docblock line="82">
          <description>Add Server
Add a server to the server pool</description>
          <long-description></long-description>
          <tag line="82" name="access" description="public"/>
          <tag line="82" name="param" description="Hostname/IP of memcached server" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="Port memcached is running on" type="int" variable="$port">
            <type by_reference="false">int</type>
          </tag>
          <tag line="82" name="param" description="Server weight. (optional, default is 0)" type="int" variable="$weight">
            <type by_reference="false">int</type>
          </tag>
          <tag line="82" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$port</name>
          <default></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$weight</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="104" package="Default">
        <name>addServers</name>
        <full_name>addServers</full_name>
        <docblock line="96">
          <description>Add Servers
Add multiple servers to the pool</description>
          <long-description></long-description>
          <tag line="96" name="access" description="public"/>
          <tag line="96" name="param" description="Array of server connection details" type="array" variable="$servers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$servers</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="118" package="Default">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="108">
          <description>Add
Add an item to memcached</description>
          <long-description></long-description>
          <tag line="108" name="access" description="public"/>
          <tag line="108" name="param" description="Key to store item under" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="Value to store" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="108" name="param" description="How long is the item valid for. (optional, default is 0)" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="108" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="131" package="Default">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="122">
          <description>Append
Append a string to a item already stored</description>
          <long-description></long-description>
          <tag line="122" name="access" description="public"/>
          <tag line="122" name="param" description="Key item is stored under" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="param" description="String to append" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="144" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="135">
          <description>Delete
Delete an item from memcached</description>
          <long-description></long-description>
          <tag line="135" name="access" description="public"/>
          <tag line="135" name="param" description="Key to delete" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="How long to wait before deleting item. (optional, default is 0)" type="int" variable="$time">
            <type by_reference="false">int</type>
          </tag>
          <tag line="135" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="144">
          <name>$time</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="157" package="Default">
        <name>deleteMulti</name>
        <full_name>deleteMulti</full_name>
        <docblock line="148">
          <description>Delete Multi
Delete multiple items from memcached</description>
          <long-description></long-description>
          <tag line="148" name="access" description="public"/>
          <tag line="148" name="param" description="Array of keys to delete" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="148" name="param" description="How long to wait before deleting item. (optional, default is 0)" type="int" variable="$time">
            <type by_reference="false">int</type>
          </tag>
          <tag line="148" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$time</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="169" package="Default">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="161">
          <description>Flush
Flush all values from memcached</description>
          <long-description></long-description>
          <tag line="161" name="access" description="public"/>
          <tag line="161" name="param" description="Time to wait before flushing memcached. (optional, default is 0)" type="int" variable="$delay">
            <type by_reference="false">int</type>
          </tag>
          <tag line="161" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$delay</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="181" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="173">
          <description>Get
Get an item from memcached</description>
          <long-description></long-description>
          <tag line="173" name="access" description="public"/>
          <tag line="173" name="param" description="Key to get" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="return" description="value of key on success, false otherwise" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="192" package="Default">
        <name>getAllKeys</name>
        <full_name>getAllKeys</full_name>
        <docblock line="185">
          <description>Get All Keys
Gets the keys stored on all the servers</description>
          <long-description></long-description>
          <tag line="185" name="access" description="public"/>
          <tag line="185" name="return" description="keys stored on all the servers on success, false otherwise" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="204" package="Default">
        <name>getMulti</name>
        <full_name>getMulti</full_name>
        <docblock line="196">
          <description>Get Multi
Get multiple items from memcached</description>
          <long-description></long-description>
          <tag line="196" name="access" description="public"/>
          <tag line="196" name="param" description="Array of keys to get" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="196" name="return" description="array of found values on success, false otherwise" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="215" package="Default">
        <name>getResultCode</name>
        <full_name>getResultCode</full_name>
        <docblock line="208">
          <description>Get Result Code
Return the result code of the last operation</description>
          <long-description></long-description>
          <tag line="208" name="access" description="public"/>
          <tag line="208" name="return" description="code of the last Memcached operation" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="226" package="Default">
        <name>getResultMessage</name>
        <full_name>getResultMessage</full_name>
        <docblock line="219">
          <description>Get Result Message
Return the message describing the result of the last operation</description>
          <long-description></long-description>
          <tag line="219" name="access" description="public"/>
          <tag line="219" name="return" description="message describing the result of the last Memcached operation" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="240" package="Default">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="230">
          <description>Replace
Replace the item under an existing key</description>
          <long-description></long-description>
          <tag line="230" name="access" description="public"/>
          <tag line="230" name="param" description="Key to replace" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="Value to replace with" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="230" name="param" description="How long the item is valid for. (optional, default is 0)" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="230" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="254" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="244">
          <description>Set
Store an item</description>
          <long-description></long-description>
          <tag line="244" name="access" description="public"/>
          <tag line="244" name="param" description="Key to dtore item under" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="param" description="Value of item" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="244" name="param" description="How long the item s valid for. (optional, default is 0)" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="244" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="254">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="254">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="267" package="Default">
        <name>setMulti</name>
        <full_name>setMulti</full_name>
        <docblock line="258">
          <description>Set Multi
Store multiple items</description>
          <long-description></long-description>
          <tag line="258" name="access" description="public"/>
          <tag line="258" name="param" description="Key =&gt; value array of items to be stored" type="array" variable="$items">
            <type by_reference="false">array</type>
          </tag>
          <tag line="258" name="param" description="How long items are valid for. (optional, default is 0)" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="258" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$items</name>
          <default></default>
          <type/>
        </argument>
        <argument line="267">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Plugins\Memcached</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/session/sessionmemcached.php" hash="1f961ab371ff373be086815cfdd08d91" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Session Memcached
Memcached session handler for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Plugins\Session" line="29" package="Default">
      <extends/>
      <name>SessionMemcached</name>
      <full_name>\Powerstack\Plugins\Session\SessionMemcached</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Session" line="43" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="30">
          <description>Init
Initalize session storage</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      session:
          engine: memcached
          savepath: [memcached server (host:port[,host:port])]&lt;/p&gt;</long-description>
          <tag line="30" name="access" description="public"/>
          <tag line="30" name="return" description="true on success, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Session" line="58" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="49">
          <description>Set
Set a session</description>
          <long-description></long-description>
          <tag line="49" name="access" description="public"/>
          <tag line="49" name="param" description="Name of session" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="Value of session" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="49" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="58">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Session" line="73" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="65">
          <description>Get
Get a session</description>
          <long-description></long-description>
          <tag line="65" name="access" description="public"/>
          <tag line="65" name="param" description="Name of session to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="value of session on success, false otherwise" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins\Session" line="88" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="80">
          <description>Delete
Delete a session</description>
          <long-description></long-description>
          <tag line="80" name="access" description="public"/>
          <tag line="80" name="param" description="Name of session to delete" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="true" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Plugins\Session\SessionMemcached</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/authentication.php" hash="51b13a484d5c85a89f23198ca233f0ac" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Authentication
Authentication class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Plugins" line="29" package="Default">
      <extends/>
      <name>Authentication</name>
      <full_name>\Powerstack\Plugins\Authentication</full_name>
      <property final="false" static="false" visibility="private" line="35" namespace="Powerstack\Plugins" package="Default">
        <name>$conf</name>
        <default></default>
        <docblock line="30">
          <description>Configuration info</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="\Powerstack\Plugins\stdclass">
            <type by_reference="false">\Powerstack\Plugins\stdclass</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Powerstack\Plugins" package="Default">
        <name>$db</name>
        <default></default>
        <docblock line="37">
          <description>Powerstack\Plugins\Database object</description>
          <long-description></long-description>
          <tag line="37" name="access" description="private"/>
          <tag line="37" name="var" description="" type="\Powerstack\Plugins\Powerstack\Plugins\Database">
            <type by_reference="false">\Powerstack\Plugins\Powerstack\Plugins\Database</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="79" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description>__construct
Create a new Powerstack\Plugins\Authenication object</description>
          <long-description>&lt;p&gt;Depends on Powerstack\Plugins\Database&lt;/p&gt;

&lt;p&gt;Configuration:
  app/config.yml:
      plugins:
          authenication:
              salt: [A 22 character salt of a-z A-Z 0-9]&lt;/p&gt;

&lt;p&gt;Database:
      mysql:
           CREATE TABLE users(
               id integer not null primary key auto_increment,
               username varchar(32) not null unique,
               password text not null,
               roles text not null
           );
       sqlite:
           CREATE TABLE users(
               id integer not null primary key autoincrement,
               username varchar(32) not null unique,
               password text not null.
               roles text not null
           );
       postrgesql:
           CREATE TABLE users(
               id serial not null primary key,
               username varchar(32) not null unique,
               password text not null,
               roles text not null
           );&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="100" package="Default">
        <name>auth</name>
        <full_name>auth</full_name>
        <docblock line="91">
          <description>Auth
Authenicate a user based on a userrname and password</description>
          <long-description></long-description>
          <tag line="91" name="access" description="public"/>
          <tag line="91" name="param" description="Username" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="Password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="true if user is authenicated, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$username</name>
          <default></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="133" package="Default">
        <name>authd</name>
        <full_name>authd</full_name>
        <docblock line="126">
          <description>Authd
Check if the current user is authenicated</description>
          <long-description></long-description>
          <tag line="126" name="access" description="public"/>
          <tag line="126" name="return" description="true if user is authenicated, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="151" package="Default">
        <name>hasRole</name>
        <full_name>hasRole</full_name>
        <docblock line="144">
          <description>Has Role
Check if a user has a role assigned</description>
          <long-description></long-description>
          <tag line="144" name="param" description="Role to check" type="string" variable="$role">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="return" description="true if user has role, false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$role</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="174" package="Default">
        <name>hashPassword</name>
        <full_name>hashPassword</full_name>
        <docblock line="166">
          <description>Hash Password
Hash a password</description>
          <long-description></long-description>
          <tag line="166" name="access" description="public"/>
          <tag line="166" name="param" description="Password to hash" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="return" description="hashed password" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$password</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Plugins\Authentication</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/cron.php" hash="699ae8cc8fe934450ae10208f8ebc14a" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Cron
Cron class for Powerstack</description>
      <long-description>&lt;p&gt;Uses PCNTL FORK this class will not work on windows.&lt;/p&gt;</long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <class final="false" abstract="false" namespace="Powerstack\Plugins" line="31" package="Default">
      <extends/>
      <name>Cron</name>
      <full_name>\Powerstack\Plugins\Cron</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="38" package="Default">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="32">
          <description>Run
Run all cron hooks</description>
          <long-description></long-description>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="31" code="50000">No DocBlock was found for \Powerstack\Plugins\Cron</error>
    </parse_markers>
  </file>
  <file path="lib/powerstack/plugins/model.php" hash="3597d0441cc945799546cce2c07f6520" package="Powerstack\Plugins">
    <docblock line="19">
      <description>Model
Model class for Powerstack</description>
      <long-description></long-description>
      <tag line="19" name="author" description="Christopher Tombleson &lt;chris@powerstack-php.org&gt;"/>
      <tag line="19" name="package" description="Powerstack"/>
      <tag line="19" name="subpackage" description="Plugins"/>
    </docblock>
    <include line="77" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Powerstack\Plugins" line="29" package="Default">
      <extends/>
      <name>Model</name>
      <full_name>\Powerstack\Plugins\Model</full_name>
      <property final="false" static="false" visibility="private" line="35" namespace="Powerstack\Plugins" package="Default">
        <name>$query</name>
        <default>null</default>
        <docblock line="30">
          <description>The sql query that represents a model</description>
          <long-description></long-description>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Powerstack\Plugins" package="Default">
        <name>$db</name>
        <default></default>
        <docblock line="37">
          <description>Powerstack\Plugins\Database object</description>
          <long-description></long-description>
          <tag line="37" name="access" description="private"/>
          <tag line="37" name="var" description="" type="\Powerstack\Plugins\Powerstack\Plugin\Database">
            <type by_reference="false">\Powerstack\Plugins\Powerstack\Plugin\Database</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="55" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description>__construct()
Create a new instance of Powerstack\Plugins\Model</description>
          <long-description>&lt;p&gt;Configuration:
  app/config.yml:
      settings:
          modelsdir: app/models&lt;/p&gt;</long-description>
          <tag line="44" name="throws" description="" type="\Powerstack\Plugins\Powerstack\Core\Exception">
            <type by_reference="false">\Powerstack\Plugins\Powerstack\Core\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="90" package="Default">
        <name>findOne</name>
        <full_name>findOne</full_name>
        <docblock line="82">
          <description>Find One
Find one record</description>
          <long-description></long-description>
          <tag line="82" name="access" description="public"/>
          <tag line="82" name="param" description="Array of where clause info. eg array('id' =&gt; 1, 'name' =&gt; 'jim', 'id' =&gt; array(1,2,3,4), 'created' =&gt; array('op' =&gt; 'gt', 'value' =&gt; 13056784))" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="82" name="return" description="object of row otherwise false." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="114" package="Default">
        <name>findMany</name>
        <full_name>findMany</full_name>
        <docblock line="103">
          <description>Find Many
Find many records</description>
          <long-description></long-description>
          <tag line="103" name="access" description="public"/>
          <tag line="103" name="param" description="Array of where clause info. eg array('id' =&gt; 1, 'name' =&gt; 'jim', 'id' =&gt; array(1,2,3,4), 'created' =&gt; array('op' =&gt; 'gt', 'value' =&gt; 13056784))" type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="103" name="param" description="Array of order by info. eg array('id' =&gt; 'desc')" type="array" variable="$order">
            <type by_reference="false">array</type>
          </tag>
          <tag line="103" name="param" description="Limit records" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="param" description="Offset records" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="return" description="object of row otherwise false." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$order</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="114">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="114">
          <name>$offset</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Powerstack\Plugins" line="149" package="Default">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="142">
          <description>All
Get all records</description>
          <long-description></long-description>
          <tag line="142" name="access" description="public"/>
          <tag line="142" name="return" description="array of all records otherwise false" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Powerstack\Plugins" line="167" package="Default">
        <name>processWhere</name>
        <full_name>processWhere</full_name>
        <docblock line="159">
          <description>Process Where
Process array with where info.</description>
          <long-description></long-description>
          <tag line="159" name="access" description="private"/>
          <tag line="159" name="param" description="Array of where clause info." type="array" variable="$where">
            <type by_reference="false">array</type>
          </tag>
          <tag line="159" name="return" description="with sql string and params array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$where</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Powerstack\Plugins" line="246" package="Default">
        <name>processOrder</name>
        <full_name>processOrder</full_name>
        <docblock line="238">
          <description>Process Order
Process order array</description>
          <long-description></long-description>
          <tag line="238" name="access" description="private"/>
          <tag line="238" name="param" description="Array of order by info" type="array" variable="$order">
            <type by_reference="false">array</type>
          </tag>
          <tag line="238" name="return" description="order sql string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$order</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Powerstack\Plugins" line="264" package="Default">
        <name>processLimit</name>
        <full_name>processLimit</full_name>
        <docblock line="257">
          <description>Process Limit</description>
          <long-description></long-description>
          <tag line="257" name="access" description="private"/>
          <tag line="257" name="param" description="Limit records" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="257" name="return" description="limit sql string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$limit</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Powerstack\Plugins" line="275" package="Default">
        <name>processOffset</name>
        <full_name>processOffset</full_name>
        <docblock line="268">
          <description>Process Offset</description>
          <long-description></long-description>
          <tag line="268" name="access" description="private"/>
          <tag line="268" name="param" description="Offset records" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="268" name="return" description="offset sql string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50000">No DocBlock was found for \Powerstack\Plugins\Model</error>
    </parse_markers>
  </file>
  <file path="index.php" hash="c64d5af823f1afb4c6dd214f0b4e229b" package="Default">
    <include line="26" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="28" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="59" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="22" package="Default">
      <name>BASE_DIR</name>
      <full_name>\BASE_DIR</full_name>
      <value>dirname(__FILE__) . '/'</value>
    </constant>
    <constant namespace="global" line="23" package="Default">
      <name>APP_DIR</name>
      <full_name>\APP_DIR</full_name>
      <value>dirname(__FILE__) . '/app/'</value>
    </constant>
    <constant namespace="global" line="24" package="Default">
      <name>VENDOR_DIR</name>
      <full_name>\VENDOR_DIR</full_name>
      <value>dirname(__FILE__) . '/vendor/'</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file index.php</error>
    </parse_markers>
  </file>
  <file path="autoloader.php" hash="dcb77d8503210b7474e2fd51423194ac" package="Default">
    <docblock line="19">
      <description>Autoloader function for Powerstack</description>
      <long-description></long-description>
    </docblock>
    <include line="39" type="Require Once" package="Default">
      <name/>
    </include>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Powerstack" full_name="Powerstack">
    <package name="App" full_name="Powerstack\App"/>
    <package name="Core" full_name="Powerstack\Core"/>
    <package name="Plugins" full_name="Powerstack\Plugins"/>
  </package>
  <namespace name="Powerstack" full_name="Powerstack">
    <namespace name="Core" full_name="Powerstack\Core"/>
    <namespace name="Plugins" full_name="Powerstack\Plugins">
      <namespace name="Analytics" full_name="Powerstack\Plugins\Analytics"/>
      <namespace name="Captcha" full_name="Powerstack\Plugins\Captcha"/>
      <namespace name="Session" full_name="Powerstack\Plugins\Session"/>
      <namespace name="Template" full_name="Powerstack\Plugins\Template"/>
    </namespace>
  </namespace>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
